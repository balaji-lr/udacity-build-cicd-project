# Workflow name
name: backend-cd

# Triggers for the workflow
on:
  workflow_dispatch:
  
  push:
    branches:
      - main

# Jobs defined in the workflow
jobs:
  LINT-JOB:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8' 

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies Run
        run: |
          pipenv install --dev
          pipenv run lint
        working-directory: ./starter/backend

  TEST-JOB:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8' 

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies Run
        run: |
          pipenv install --dev
          pipenv run test
        working-directory: ./starter/backend

  BUILD-JOB:
    runs-on: ubuntu-latest
    needs: [LINT-JOB, TEST-JOB]
    
    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-east-1
        aws-access-key-id:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      working-directory: starter/backend
      run: |
        docker build -t backend:${GITHUB_SHA} .
        docker tag backend:${GITHUB_SHA} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/backend:${GITHUB_SHA}
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/backend:${GITHUB_SHA}
    
    - name: Configure kubectl
      run: aws eks update-kubeconfig --name cluster --region us-east-1

    - name: Set image tag and apply to cluster
      working-directory: starter/backend/k8s
      run: |
        kustomize edit set image backend=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/backend:${GITHUB_SHA} --validate=false
        kustomize build | kubectl apply -f -
        
    - name: Display application URLs   
      working-directory: starter/backend/k8s    
      run: kubectl get svc -A